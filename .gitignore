Stephane
stephanemalo
DisponÃ­vel
Jhonny Trinca, Yasmin

Yasmin
 adicionou 
Stephane
 ao grupo.
 â€” Hoje Ã s 10:57
Yasmin
 iniciou uma chamada que durou 21 minutos.
 â€” Hoje Ã s 10:57
Yasmin â€” Hoje Ã s 10:58
Imagem
Imagem
Stephane â€” Hoje Ã s 11:03
describe('ValidaÃ§Ã£o do Backend', () => {
  it('Deve retornar sucesso ao enviar dados vÃ¡lidos', () => {
    cy.request({
      method: 'POST',
      url: 'URL_DO_SEU_BACKEND', // Substitua pela URL real do seu backend
      body: {
        Name: 'John Doe',
        Email: 'john.doe@example.com',
        Company: 'Example Company',
        Website: 'http://www.example.com/',
        Phone: '(11) 98765-4321',
        Inquiry: 'Mensagem de teste para o formulÃ¡rio.',
      },
    }).then((response) => {
      expect(response.status).to.equal(200);
      expect(response.body.sucesso).to.be.true;
    });
  });

  it('Deve retornar erro ao enviar dados invÃ¡lidos', () => {
    cy.request({
      method: 'POST',
      url: 'URL_DO_SEU_BACKEND', // Substitua pela URL real do seu backend
      body: {
        Name: '123', // Nome invÃ¡lido
        Email: 'email_invalido', // E-mail invÃ¡lido
        Company: '', // Empresa em branco
        Website: 'website_invalido', // URL invÃ¡lida
        Phone: 'telefone_invalido', // Telefone invÃ¡lido
        Inquiry: '', // Mensagem em branco
      },
    }).then((response) => {
      expect(response.status).to.equal(412);
      expect(response.body.sucesso).to.be.false;
      expect(response.body.erro).to.exist;
    });
  });
});
Jhonny Trinca â€” Hoje Ã s 11:15
it('validates and processes the intercept object', () => {
  cy.intercept('POST', '/todos').as('postTodo')

  cy.wait('@postTodo')
    .then((intercept) => {
      // get the field from the intercept object
      const { statusCode } = intercept.response
      // confirm the status code is 201
      expect(statusCode).to.eq(201)
    })
})
Jhonny Trinca â€” Hoje Ã s 11:57
terminei aqui, quando quiserem ver me avisem
Stephane â€” Hoje Ã s 13:23
to pronta
Stephane â€” Hoje Ã s 13:38
@Jhonny Trinca VocÃª sabe como posso fazer um commit  com meu git lab pessoal, nÃ£o posso ðŸ˜¦
Jhonny Trinca â€” Hoje Ã s 13:40
a Yasmin voltando a gente vÃª pode ser?
Jhonny Trinca â€” Hoje Ã s 13:40
alternar a conta da south pra pessoal? vocÃª usa o vs code mesmo?
Jhonny Trinca â€” Hoje Ã s 14:04
vocÃª iria mudar sÃ³ pra agora ou quer deixar ele salvo global?
Yasmin â€” Hoje Ã s 14:26
booo
raaa
Yasmin
 iniciou uma chamada.
 â€” Hoje Ã s 14:26
Yasmin â€” Hoje Ã s 15:00
npm install --save-dev @badeball/cypress-cucumber-preprocessor
"cypress-cucumber-preprocessor": {
    "stepDefinitions": "cypress/support/step_definitions/*/.js"
  }
Yasmin â€” Hoje Ã s 15:21
https://github.com/Yasmin29/Cypress_Com_Cucumber
GitHub
GitHub - Yasmin29/Cypress_Com_Cucumber: Curso udemy Cypress with Cu...
Curso udemy Cypress with Cucumber BDD - Beginner to Expert in 9 Hours! - GitHub - Yasmin29/Cypress_Com_Cucumber: Curso udemy Cypress with Cucumber BDD - Beginner to Expert in 9 Hours!
GitHub - Yasmin29/Cypress_Com_Cucumber: Curso udemy Cypress with Cu...

# Created by https://www.toptal.com/developers/gitignore/api/windows,linux,macos,node,yarn,visualstudiocode,cypressio
# Edit at https://www.toptal.com/developers/gitignore?templates=windows,linux,macos,node,yarn,visualstudiocode,cypressio

### CypressIO ###
# gitignore template for the CypressIO, browser test framework
Expandir
message.txt
5 KB
Yasmin â€” Hoje Ã s 15:33
npm list --depth=0
./node_modules

# Created by https://www.toptal.com/developers/gitignore/api/windows,linux,macos,node,yarn,visualstudiocode,cypressio
# Edit at https://www.toptal.com/developers/gitignore?templates=windows,linux,macos,node,yarn,visualstudiocode,cypressio

### CypressIO ###
# gitignore template for the CypressIO, browser test framework
Expandir
message.txt
5 KB
ï»¿

# Created by https://www.toptal.com/developers/gitignore/api/windows,linux,macos,node,yarn,visualstudiocode,cypressio
# Edit at https://www.toptal.com/developers/gitignore?templates=windows,linux,macos,node,yarn,visualstudiocode,cypressio

### CypressIO ###
# gitignore template for the CypressIO, browser test framework
# website: https://www.cypress.io/

cypress/results/*
cypress/reports/*
cypress/screenshots/*
cypress/videos/*

### Linux ###
*~

# temporary files which can be created if a process still has a handle open of a deleted file
.fuse_hidden*

# KDE directory preferences
.directory

# Linux trash folder which might appear on any partition or disk
.Trash-*

# .nfs files are created when an open file is removed but is still being accessed
.nfs*

### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### Node ###
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test
.env.production

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*

### Node Patch ###
# Serverless Webpack directories
.webpack/

# Optional stylelint cache
.stylelintcache

# SvelteKit build / generate output
.svelte-kit

### VisualStudioCode ###
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

### VisualStudioCode Patch ###
# Ignore all local history of files
.history
.ionide

# Support for Project snippet scope
!.vscode/*.code-snippets

### Windows ###
# Windows thumbnail cache files
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

### yarn ###
# https://yarnpkg.com/advanced/qa#which-files-should-be-gitignored

.yarn/*
!.yarn/releases
!.yarn/plugins
!.yarn/sdks
!.yarn/versions

# if you are NOT using Zero-installs, then:
# comment the following lines
!.yarn/cache

# and uncomment the following lines
# .pnp.*

# End of https://www.toptal.com/developers/gitignore/api/windows,linux,macos,node,yarn,visualstudiocode,cypressio

./node_modules
